/**
 * NOTE: This class is auto generated by the swagger code generator program (1.0.14).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Inversion;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;

@Api(value = "inversion", description = "the Inversion API")
@RequestMapping("/inversion")
public interface InversionApi {

    @ApiOperation(value = "Agregar una inversión", nickname = "agregarInversion", notes = "Agregar una inversión", tags={ "administrador","inversor", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Recurso creado"),
        @ApiResponse(code = 400, message = "Parámetro inválido"),
        @ApiResponse(code = 409, message = "Recurso ya existente") })
    @RequestMapping(value = "/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Inversion> agregarInversion(@ApiParam(value = "Inversión a agregar"  )  @Valid @RequestBody Inversion inversion);


    @ApiOperation(value = "Buscar una inversión", nickname = "buscarInversion", notes = "Enviando un id válido retorna la información de una inversión ", response = Object.class, tags={ "administrador","emisor","inversor", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Recurso obtenido", response = Object.class),
        @ApiResponse(code = 400, message = "Parámetro inválido") })
    @RequestMapping(value = "/{idInversion}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Inversion> buscarInversion(@ApiParam(value = "Id de la inversión a buscar",required=true) @PathVariable("idInversion") String idInversion);


    @ApiOperation(value = "Eliminar una inversión", nickname = "eliminarInversion", notes = "Enviando un id válido se elimina la respectiva inversión ", tags={ "administrador","inversor", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "Recurso eliminado"),
        @ApiResponse(code = 400, message = "Parámetro inválido") })
    @RequestMapping(value = "/{idInversion}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Void> eliminarInversion(@ApiParam(value = "Inversión a ser eliminada",required=true) @PathVariable("idInversion") String idInversion);

}
