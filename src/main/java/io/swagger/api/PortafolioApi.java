/**
 * NOTE: This class is auto generated by the swagger code generator program (1.0.14).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Inversion;
import io.swagger.model.Portafolio;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;

@Api(value = "portafolio", description = "the portafolio API")
@RequestMapping("/portafolio")
public interface PortafolioApi {

    @ApiOperation(value = "Agregar un portafolio", nickname = "agregarPortafolio", notes = "Agregar un portafolio", tags={ "administrador","emisor", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Recurso creado"),
        @ApiResponse(code = 400, message = "Parámetro inválido"),
        @ApiResponse(code = 409, message = "Recurso ya existente") })
    @RequestMapping(value = "/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Portafolio> agregarPortafolio(@ApiParam(value = "Portafolio a agregar"  )  @Valid @RequestBody Portafolio portafolio);


    @ApiOperation(value = "Buscar un portafolio", nickname = "buscarPortafolio", notes = "Enviando un id válido retorna la información de un portafolio ", response = Object.class, tags={ "administrador","emisor","inversor", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Recurso obtenido", response = Object.class),
        @ApiResponse(code = 400, message = "Parámetro inválido") })
    @RequestMapping(value = "/otro/{idPortafolio}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Portafolio> buscarPortafolio(@ApiParam(value = "Id del portafolio a buscar",required=true) @PathVariable("idPortafolio") String idPortafolio);


    @ApiOperation(value = "Eliminar un portafolio", nickname = "eliminarPortafolio", notes = "Enviando un id válido se elimina el respectivo portafolio ", tags={ "administrador","emisor", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "Recurso eliminado"),
        @ApiResponse(code = 400, message = "Parámetro inválido") })
    @RequestMapping(value = "/{idPortafolio}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Void> eliminarPortafolio(@ApiParam(value = "Portafolio a ser eliminado",required=true) @PathVariable("idPortafolio") String idPortafolio);

    @ApiOperation(value = "busca un listado de inversiones dado un portafolio", nickname = "listarInversiones", notes = " ", response = Object.class, tags={ "administrador","emisor",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "devolver el resultado obtenido", response = Object.class),
            @ApiResponse(code = 400, message = "parametro incorrecto") })
    @RequestMapping(value = "/{idPortafolio}/inversiones",
            produces = { "application/json" },
            method = RequestMethod.GET)
    List<Inversion> listarInversiones(@ApiParam(value = "id portafolio a listar",required=true) @PathVariable("idPortafolio") String idPortafolio);



    @ApiOperation(value = "Buscar portafolio que se ajusten a la inversion", nickname = "consultarPortafolio", notes = " ", response = Object.class, tags={ "administrador","emisor",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "devolver el resultado obtenido", response = Object.class),
            @ApiResponse(code = 400, message = "parametro incorrecto") })
    @RequestMapping(value = "/{valorInvertir}",
            produces = { "application/json" },
            method = RequestMethod.GET)
    List<Portafolio> consultarInversiones(@ApiParam(value = "valor a invertir",required=true) @PathVariable("valorInvertir") Integer valor);
}
